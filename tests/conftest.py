import os
import pytest
import requests
from dotenv import load_dotenv

load_dotenv()

BASE_URL = os.getenv("BASE_URL")

HEADERS = {
    "Content-Type": "application/json",
    "User-Agent": "PostmanRuntime/7.44.1",
    "Platform": "IOS",
    "App-Version": "4.5.0"
}

print("üìç BASE_URL =", BASE_URL)
if not BASE_URL:
    pytest.fail("‚ùå BASE_URL –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω! –ü—Ä–æ–≤–µ—Ä—å .env –∏–ª–∏ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è")


@pytest.fixture(scope="session")
def sms_token():
    phone_number = "9000008851"

    print(f"üì® –û—Ç–ø—Ä–∞–≤–∫–∞ SMS –Ω–∞ –Ω–æ–º–µ—Ä: {phone_number}")
    payload = {
        "phone": {
            "countryCode": "7",
            "number": phone_number
        }
    }

    response = requests.post(
        f"{BASE_URL}/authorization/sendVerificationCode",
        headers=HEADERS,
        json=payload
    )

    print("‚û°Ô∏è –û—Ç–≤–µ—Ç –Ω–∞ –æ—Ç–ø—Ä–∞–≤–∫—É –∫–æ–¥–∞:", response.status_code, response.text)

    if response.status_code != 200:
        pytest.fail(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –∫–æ–¥–∞: {response.status_code}")

    try:
        body = response.json().get("result", {})
        token = body.get("token")
        verification_code = body.get("verificationCode") or "1234"  # –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é 1234
        if not token:
            raise ValueError("Token –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –≤ –æ—Ç–≤–µ—Ç–µ")
        print(f"‚úÖ –ü–æ–ª—É—á–µ–Ω—ã token –∏ verificationCode: {token}, {verification_code}")
        return {
            "token": token,
            "code": verification_code
        }
    except Exception as e:
        print("‚ö†Ô∏è –û—à–∏–±–∫–∞ —Ä–∞–∑–±–æ—Ä–∞ JSON:", e)
        pytest.fail("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∏–∑–≤–ª–µ—á—å sms_token –∏–ª–∏ verificationCode –∏–∑ –æ—Ç–≤–µ—Ç–∞")


@pytest.fixture(scope="session")
def access_token(sms_token):
    payload = {
        "token": sms_token["token"],
        "verificationCode": sms_token["code"]
    }

    response = requests.post(
        f"{BASE_URL}/authorization/basic",
        headers=HEADERS,
        json=payload
    )

    print("üì§ –û—Ç–≤–µ—Ç –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏:", response.status_code, response.text)

    if response.status_code != 200:
        pytest.fail(f"‚ùå –û—à–∏–±–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏: {response.status_code}")

    try:
        token = response.json()["result"]["access"]["token"]
        print("‚úÖ Access Token:", token)
        return token
    except Exception as e:
        print("‚ö†Ô∏è –û—à–∏–±–∫–∞ —Ä–∞–∑–±–æ—Ä–∞ JSON:", e)
        pytest.fail("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∏–∑–≤–ª–µ—á—å access_token –∏–∑ –æ—Ç–≤–µ—Ç–∞")
