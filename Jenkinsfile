pipeline {
    agent any

    environment {
        BASE_URL = credentials('xfit_base_url')
    }

    stages {
        stage('Checkout') {
            steps {
                echo 'üîÑ –ü–æ–ª—É—á–∞–µ–º –∫–æ–¥ –∏–∑ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è'
                checkout scm
            }
        }

        stage('Setup Virtualenv & Install Dependencies') {
            steps {
                echo 'üì¶ –°–æ–∑–¥–∞–Ω–∏–µ –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–≥–æ –æ–∫—Ä—É–∂–µ–Ω–∏—è –∏ —É—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π'
                sh '''
                    python3 -m venv venv
                    . venv/bin/activate
                    pip install --upgrade pip
                    pip install -r requirements.txt
                    pip install allure-pytest
                '''
            }
        }

        stage('Run Tests') {
            steps {
                echo 'üöÄ –ó–∞–ø—É—Å–∫ –∞–≤—Ç–æ—Ç–µ—Å—Ç–æ–≤ —Å –≥–µ–Ω–µ—Ä–∞—Ü–∏–µ–π Allure –æ—Ç—á—ë—Ç–∞'
                sh '''
                    . venv/bin/activate
                    pytest tests/ --tb=short -v --alluredir=allure-results
                '''
            }
        }

        stage('Allure Report') {
            steps {
                echo 'üìä –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∏ –ø—É–±–ª–∏–∫–∞—Ü–∏—è Allure –æ—Ç—á—ë—Ç–∞'
                allure([
                    results: [[path: 'allure-results']],
                    reportBuildPolicy: 'ALWAYS'
                ])
            }
        }
    }
}
